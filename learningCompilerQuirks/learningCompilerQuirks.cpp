// learningCompilerQuirks.cpp : This file contains the 'main' function. Program execution begins and ends there.
#include <chrono>
#include <iostream>

using namespace std::chrono;

void func1() {
    steady_clock::time_point start = steady_clock::now();
    static const volatile char a[] = { 0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37,0x13,0x37};
    steady_clock::time_point end = steady_clock::now();
    std::cout << "func1() took: " << duration_cast<nanoseconds>(end - start).count() << "ns" << std::endl;
}

void func2() {
    steady_clock::time_point start = steady_clock::now();
    const char b[]                 = { 0x66,0xFF,0xCC,0x66,0xFF,0xCC,0x66,0xFF,0xCC,0x66,0xFF,0xCC,0x66,0xFF,0xCC,0x66,0xFF,0xCC,0x66,0xFF,0xCC,0x66,0xFF,0xCC,0x66,0xFF,0xCC,0x66};
    steady_clock::time_point end = steady_clock::now();
    std::cout << "func2() took: " << duration_cast<nanoseconds>(end - start).count() << "ns" << std::endl;
}

int main()
{
    func1();
    func2();
}
